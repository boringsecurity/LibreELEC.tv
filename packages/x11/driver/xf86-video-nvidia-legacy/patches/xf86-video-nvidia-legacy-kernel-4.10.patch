diff --git a/kernel/nv-linux.h b/kernel/nv-linux.h
index 48bd8ab..703e224 100644
--- a/kernel/nv-linux.h
+++ b/kernel/nv-linux.h
@@ -270,7 +270,7 @@ RM_STATUS nvos_forward_error_to_cray(struct pci_dev *, NvU32,
 
 extern int nv_pat_mode;
 
-#if !defined(NV_VMWARE) && defined(CONFIG_HOTPLUG_CPU)
+#if 0
 #define NV_ENABLE_HOTPLUG_CPU
 #include <linux/cpu.h>              /* CPU hotplug support              */
 #include <linux/notifier.h>         /* struct notifier_block, etc       */
@@ -2119,7 +2119,7 @@ static inline NvU64 nv_node_end_pfn(int nid)
             if (force)
                 flags |= FOLL_FORCE;
 
-            return get_user_pages_remote(tsk, mm, start, nr_pages, flags, pages, vmas);
+            return get_user_pages_remote(tsk, mm, start, nr_pages, flags, pages, vmas, NULL);
         }
     #endif
 #else
diff --git a/kernel/nv-pat.c b/kernel/nv-pat.c
index a725533..91070e0 100644
--- a/kernel/nv-pat.c
+++ b/kernel/nv-pat.c
@@ -210,14 +210,13 @@ nvidia_cpu_callback(struct notifier_block *nfb, unsigned long action, void *hcpu
 
     switch (action)
     {
-        case CPU_DOWN_FAILED:
         case CPU_ONLINE:
             if (cpu == (NvUPtr)hcpu)
                 nv_setup_pat_entries(NULL);
             else
                 NV_SMP_CALL_FUNCTION(nv_setup_pat_entries, hcpu, 1);
             break;
-        case CPU_DOWN_PREPARE:
+        case CPU_DOWN_PREPARE_FROZEN:
             if (cpu == (NvUPtr)hcpu)
                 nv_restore_pat_entries(NULL);
             else
